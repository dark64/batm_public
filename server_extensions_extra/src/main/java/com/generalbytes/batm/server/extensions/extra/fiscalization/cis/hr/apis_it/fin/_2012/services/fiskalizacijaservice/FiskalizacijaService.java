package com.generalbytes.batm.server.extensions.extra.fiscalization.cis.hr.apis_it.fin._2012.services.fiskalizacijaservice;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.4.2
 * 2021-01-17T01:49:24.189+01:00
 * Generated source version: 3.4.2
 *
 */
@WebServiceClient(name = "FiskalizacijaService",
                  wsdlLocation = "classpath:wsdl/FiskalizacijaService.wsdl",
                  targetNamespace = "http://www.apis-it.hr/fin/2012/services/FiskalizacijaService")
public class FiskalizacijaService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://www.apis-it.hr/fin/2012/services/FiskalizacijaService", "FiskalizacijaService");
    public final static QName FiskalizacijaPortType = new QName("http://www.apis-it.hr/fin/2012/services/FiskalizacijaService", "FiskalizacijaPortType");
    static {
        WSDL_LOCATION = FiskalizacijaService.class.getClassLoader().getResource("wsdl/FiskalizacijaService.wsdl");
    }

    public FiskalizacijaService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public FiskalizacijaService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public FiskalizacijaService() {
        super(WSDL_LOCATION, SERVICE);
    }

    public FiskalizacijaService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public FiskalizacijaService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public FiskalizacijaService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns FiskalizacijaPortType
     */
    @WebEndpoint(name = "FiskalizacijaPortType")
    public FiskalizacijaPortType getFiskalizacijaPortType() {
        return super.getPort(FiskalizacijaPortType, FiskalizacijaPortType.class);
    }

    /**
     *
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns FiskalizacijaPortType
     */
    @WebEndpoint(name = "FiskalizacijaPortType")
    public FiskalizacijaPortType getFiskalizacijaPortType(WebServiceFeature... features) {
        return super.getPort(FiskalizacijaPortType, FiskalizacijaPortType.class, features);
    }

}
